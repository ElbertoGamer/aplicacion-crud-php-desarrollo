name: Docker Build and Push

on:
  push:
    # branches: ["main"]
    branches:
      - main  # Se ejecutará cuando haya un push en main
  pull_request:
    branches:
      - main       

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
# Hay que configurar los siguientes secretos
# Settings > Secrets and variables > Actions > New repository secret
# DOCKER_USERNAME → Tu usuario de Docker Hub.
# DOCKER_PASSWORD → Tu token de acceso de Docker Hub (en lugar de la contraseña, genera un token en Docker Hub).

          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir y etiquetar la imagen (BUILD)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mi-imagen:latest .
      
      - name: Subir imagen a Docker Hub (PUSH)
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lamp-crud-app:latest

# Otra manera
      #- name: Build and push
      #  uses: docker/build-push-action@v4
      #  with:
      #    context: .
      #    push: true
      #    tags: ${{ secrets.DOCKER_USERNAME }}/lamp-crud-app:latest

      - name: Despliegue en servidor de produccion
        uses: appleboy/ssh-action@v1.2.1
        with:
           host: ${{ secrets.SSH_HOST }}
           username: ${{ secrets.SSH_USER }}
           key: ${{ secrets.SSH_KEY }}
           port: ${{ secrets.SSH_PORT }}   
           script: |
               cd aplicacion-crud-php-produccion/
               git pull origin main
               docker compose down
               docker compose pull apache
               docker compose up -d

              
